#!/usr/bin/env ruby
require 'colorize'
require 'fileutils'
require 'find'

registered = false

config_dir = '.rays_config'
config_path = "#{ENV['HOME']}/#{config_dir}"
script_file = "$HOME/#{config_dir}/scripts/rays"
script_file_full_path = "#{ENV['HOME']}/#{config_dir}/scripts/rays"

command = "\n[[ -s \"#{script_file}\" ]] && source \"#{script_file}\" # Load RAYS into a shell session *as a function*'\n\n"

profile_file = "#{ENV['HOME']}/.bashrc"
profile_file = "#{ENV['HOME']}/.bash_profile" unless File.exists?(profile_file)
profile_file = "#{ENV['HOME']}/.profile" unless File.exists?(profile_file)

unless File.exists?(profile_file)
  puts "Cannot find profile file."
  puts "Add the following command manually to the end of your profile file"
  puts command
end

begin
  registered = !open(profile_file).grep(/rays/).empty?
rescue => e
  # do nothing
end

unless registered

  # Create directory and copy template
  unless Dir.exists?(config_path)
    FileUtils.mkdir(config_path)
    template_path = "#{File.expand_path(File.dirname(__FILE__))}/../lib/rays/config/templates/global"
    Find.find(template_path) do |file|
      file_base_path = file.sub(template_path, "")
      next if file_base_path.empty?
      FileUtils.cp_r(file, File.join(config_path, file_base_path))
    end
  end

  File.open(profile_file, 'a') do |file|
    file.write(command)
  end

else
  # update script file.
  if File.exist?(script_file_full_path)
    FileUtils.cp("#{File.expand_path(File.dirname(__FILE__))}/../lib/rays/config/templates/global/scripts/rays", script_file_full_path)
  end
end

puts "Please run '. #{profile_file}' or reopen your shell window".yellow